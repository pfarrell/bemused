%a{href: "#{url_for("/#{model.class.to_s.downcase}/#{model.id}")}", data: {"internal": "true"}}
  =model.to_s
%form{method: "POST", action:"#{url_for("/admin/#{model.class.to_s.downcase}/#{model.id}")}", data: {"internal": "true"}}
  -model.editable_attributes.each do |k,v|
    .input-group.input-group-lg
      %span.input-group-addon
        =k
      %input.form-control{type:"text", name:"#{k}", value: "#{v}"}
  .input-group.input-group-lg
    %span.input-group-addon
      add track
    %input.form-control{type:"text", name:"track_name", id:"track"}
  .submit
    %input.btn.btn-default.btn-lg{type:"Submit", value:"Submit"}
%img{src: "#{url_for("/images/albums/#{model.image_path}")}"}
%form{method: "POST", action:"#{url_for("/admin/#{model.class.to_s.downcase}/#{model.id}/image")}"}
  .input-group.input-group-lg
    %span.input-group-addon
      Image Url
    %input.form-control{type:"text", name:"image_url"}
  .input-group.input-group-lg
    %span.input-group-addon
      Image Name
    %input.form-control{type:"text", name:"image_name", value: "#{model.image_path}"}
  .input-group.input-group-lg
    %input.btn.btn-default.btn-lg{type:"Submit", value:"Submit"}
.tracks
  .row.sp-top-sm.no-pad
    .col-md-1
      TrackId
    .col-md-3
      Title
    .col-md-4
      Order
  -model.playlist_tracks.each do |playlist_track|
    %form{class: "playlist_trackform#{playlist_track.id}"}
      .row.no-pad
        .col-md-1
          %input.col-md-4.form-control{type: 'text', name: 'track_id', value: "#{playlist_track.track_id}" , onFocus: "this.dirty=false", onChange: "this.dirty = true", onBlur: "if(this.dirty) {save_playlist_track(#{playlist_track.id})}"}
        .col-md-3
          %span
            #{playlist_track.track.title unless playlist_track.nil? || playlist_track.track.nil?}
        .col-md-1
          %input.col-md-4.form-control{type: 'text', name: 'order', value: "#{playlist_track.order}" , onFocus: "this.dirty=false", onChange: "this.dirty = true", onBlur: "if(this.dirty) {save_playlist_track(#{playlist_track.id})}"}
        .col-md-1
          %input.btn.btn-warning{type: 'button', onClick:"if(confirm('delete track?')) {delete_track(#{playlist_track.id})}", value: "delete"}

        
:javascript
  keypress_enable=false

  function delete_track(id) {
    var url = "#{url_for('/playlist_track/')}" + id;
    $('.playlist_trackform' + id).remove();
    return del(url);
  }

  function save_playlist_track(id) {
    var form= $(".playlist_trackform" + id);
    var url = "#{url_for('/playlist_track/')}" + id; 
    return post(form, url);
  }
