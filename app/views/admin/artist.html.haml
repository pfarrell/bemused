%a{href: "#{url_for("/#{model.class.to_s.downcase}/#{model.id}")}"}
  =model.to_s
%form.model
  -model.editable_attributes.each do |k,v|
    .input-group.input-group-lg
      %span.input-group-addon
        =k
      %input.form-control{type:"text", name:"#{k}", value: "#{v}", onFocus: "this.dirty=false", onChange: "this.dirty = true", onBlur: "if(this.dirty) {update_model(#{model.id})}"}
%img{src: "#{url_for("/images/artists/#{model.image_path}")}"}
%form.imageform
  .input-group.input-group-lg
    %span.input-group-addon
      Image Url
    %input.form-control{type:"text", name:"image_url"}
  .input-group.input-group-lg
    %span.input-group-addon
      Image Name
    %input.form-control{type:"text", name:"image_name", value: "#{model.image_path}", onFocus: "this.dirty=false", onChange: "this.dirty = true", onBlur: "if(this.dirty) {save_image(#{model.id})}"}
.row.sp-top-sm.no-pad
  =haml :'partials/tags', locals: { owner_id: model.id, tags: model.tags }
.row
  .col-xs-12
    =haml :'partials/newtag', locals: { owner_id: model.id }
:javascript
  keypress_enable=false;

  $(document).ready(function() {
    $('#tag').autocomplete({
      serviceUrl: '#{url_for "/searchtags"}',
      paramName: 'q',
      minChars: 1,
      lookupLimit: 50,
      autoSelectFirst: true,
    });
  });

  function add_tag(owner_id) {
    var url = "#{url_for('/artist/')}" + owner_id + '/tags'; 
    var form= $("#newtag");
    return put(form, url);
  }

  function remove_tag(owner_id, tag_id) {
    var url = "#{url_for('/artist/')}" + owner_id + '/tag/' + tag_id; 
    $('.tagform' + tag_id).remove();
    return del(url);
  }

  function update_model(id) {
    var form=$(".model");
    var url = "#{url_for('/admin/artist/')}" + id;
    return post(form, url);
  }

  function save_image(id) {
    var form= $(".imageform");
    var url = "#{url_for('/admin/artist/')}" + id + "/image";
    return post(form, url);
  }
