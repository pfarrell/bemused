%row
  .col-sm-12{style: "margin-top: 1em;"}
    #visualization
      .item-x3
        %canvas.visualizer
      .item.hidden
        %input#refresh{type:"TEXT", value: "10", }
 
:javascript
  var visualization_enabled = true;
  $(document).ready(function() {
    $("#jquery_jplayer_1").bind($.jPlayer.event.loadstart, function (event) {
      visualization_enabled = false;
      console.log("setMedia");
      var audio = event.currentTarget.childNodes[1];
      visualize(audio);
    });
  });

  function visualize(audio) {
    console.log("visualize called");
    visualization_enabled = true;
    var ctx = new (window.AudioContext || window.webkitAudioContext)();
    //var audio = $("audio#jp_audio_i")[0];
    var audioSrc = ctx.createMediaElementSource(audio);
    var analyser = ctx.createAnalyser();

    var canvas = document.querySelector('.visualizer');
    var canvasCtx = canvas.getContext("2d");
    var drawVisual;

    var WIDTH = canvas.width;
    var HEIGHT = canvas.height;

    analyser.fftSize = 256;

    // we have to connect the MediaElementSource with the analyser 
    audioSrc.connect(analyser);
    audioSrc.connect(ctx.destination);
    // we could configure the analyser: e.g. analyser.fftSize (for further infos read the spec)
   
    // frequencyBinCount tells you how many values you'll receive from the analyser
    var bufferLength = analyser.frequencyBinCount;
    var dataArray = new Uint8Array(bufferLength);
    var nextColor = null;
    
    canvasCtx.fillStyle = 'rgb(255,255,120)';
    canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);

    //renderFrame();
    console.log("draw called");
    //drawVisual = requestAnimationFrame(draw);
    analyser.getByteTimeDomainData(dataArray);

    canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);

    var drawAlt = function() {
      drawVisual = requestAnimationFrame(drawAlt);
      analyser.getByteFrequencyData(dataArray);
      canvasCtx.fillStyle='rgb(0,0,0)';
      canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);

      var barWidth=(WIDTH / bufferLength) * 2.5;
      var barHeight;
      var x = 0;
      for(var i =0; i<bufferLength; i++) {
        barHeight = dataArray[i];
        canvasCtx.fillStyle='rgb(' + (barHeight+100) + ',75,75)';
        canvasCtx.fillRect(x,HEIGHT-barHeight/2, barWidth, barHeight/2);
        x+=barWidth + 1;
      }
    };
    drawAlt();
  }
